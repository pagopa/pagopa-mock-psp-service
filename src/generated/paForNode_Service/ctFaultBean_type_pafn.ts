/**
 * Do not edit this file it is auto-generated by italia-utils / gen-api-models.
 * See https://github.com/teamdigitale/italia-utils
 */
/* tslint:disable */

import { stFaultCode_type_pafn } from "./stFaultCode_type_pafn";
import * as t from "io-ts";

/**
 * - `id` : Subject issuing the error.
 * Allowed values are :
 *   - `NodoDeiPagamentiSPC` : constant which identifies the NodoSPC
 *   - `[domain identifier]` : domain id of the creditor entity issuing the fault
 *   - `[PSP identifier]` : PSP identifier issuing the fault
 *
 * - `faultCode` : error code (see `stFaultCode` to details)
 *
 * - `faultString` : Specification of the error code, specific to the subject issuing it. Contains a more talking description relating to the `faultCode`.
 *
 * - `description` : Additional description of the error set by the NodoSPC, by the creditor or PSP.
 *
 * - `serial` : Position of the element in the referenced list. Useful when providing a parameter in the form of a vector (for example, in the primitive `SendCarrelloRPT` node).
 * If the error is generated by the EC or by the PSP, the data reported is the value of the `faultBean.serial` data set by the EC or by the PSP.
 *
 * - `originalFaultCode` : Error code generated by the counterpart. (_Set only it isn't generated by NodoSPC._)
 *
 * - `originalFaultString` : Specification of the error code generated by the counterpart. (_Set only it isn't generated by NodoSPC._)
 *
 * - `originalDescription` : Additional description of the error generated by the counterparty. (_Set only it isn't generated by NodoSPC._)
 */

// required attributes
const ctFaultBean_type_pafnR = t.interface({
  faultCode: stFaultCode_type_pafn,

  faultString: t.string,

  id: t.string
});

// optional attributes
const ctFaultBean_type_pafnO = t.partial({
  description: t.string,

  serial: t.Integer,

  originalFaultCode: t.string,

  originalFaultString: t.string,

  originalDescription: t.string
});

export const ctFaultBean_type_pafn = t.intersection(
  [ctFaultBean_type_pafnR, ctFaultBean_type_pafnO],
  "ctFaultBean_type_pafn"
);

export type ctFaultBean_type_pafn = t.TypeOf<typeof ctFaultBean_type_pafn>;
